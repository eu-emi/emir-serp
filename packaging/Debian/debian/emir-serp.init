#!/bin/bash
#
# EMIR-SERP - EMI Registry - Service Endpoint Record Publisher
### BEGIN INIT INFO
# Provides:          emir-serp
# Required-Start:    $remote_fs $syslog
# Required-Stop:     $remote_fs $syslog
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Short-Description: EMIR-SERP - EMI Registry - Service Endpoint Record Publisher
# Description:       EMIR-SERP - EMI Registry - Service Endpoint Record Publisher
### END INIT INFO

[ -f /etc/default/emir-serp ] && . /etc/default/emir-serp

if [ "$ENABLED" != "yes" ] 
then
  if [ "$ENABLED" = "no-unconfigured" ] 
  then
    echo "The service is still unconfigured."
    echo "Please edit /etc/default/emir-serp after the configuration."
  fi
  exit 0
fi

# Source function library.
. /lib/lsb/init-functions

NAME="EMIR-SERP"

#This must be equal to this file name
SERVICE=emir-serp
EMIR_SERP_USER=emi
DAEMON=/usr/bin/emir-serp
LASTPID=/var/run/emi/emir-serp/emir-serp.pid

start() {
        if [ -a "$LASTPID" ]; then
                status_of_proc -p "$LASTPID" "$SERVICE" "$NAME"
        else
                log_daemon_msg "Starting $NAME"
                su -s /bin/bash -c "$DAEMON -p $LASTPID" "$EMIR_SERP_USER"
                RETVAL=$?
                if [ $RETVAL -eq 0 ]; then
                        touch "/var/lock/$SERVICE"
                        log_success_msg "-e \tdone"
                else
                        log_error_msg "-e \tfailed"
                fi
                return $RETVAL
        fi
}

stop() {
        if [ -a "$LASTPID" ]; then
                log_daemon_msg "Stopping $NAME"
                kill -s SIGTERM `cat $LASTPID` >/dev/null 2>&1
                if [ $? -eq 0 ]; then
                        rm -f "/var/lock/$SERVICE"
                        log_success_msg "-e \tdone"
                else
                        log_error_msg "-e \tfailed"
                fi
        else
                status_of_proc -p "$LASTPID" "$SERVICE" "$NAME"
        fi
}

status(){
         if [ -a "$LASTPID" ]; then
                 status_of_proc -p "$LASTPID" "$SERVICE" "$NAME"
         else
                 log_progress_msg "$SERVICE is not running"
                 log_end_msg 0
         fi
}



# See how we were called.
case "$1" in
  start)
	start
	;;
  stop)
	stop
	;;
  status)
	status 
	;;
  restart)
	stop
	start
	;;
  *)
	echo $"Usage: $0 {start|stop|status|restart|help}"
	exit 1
esac

exit $RETVAL
