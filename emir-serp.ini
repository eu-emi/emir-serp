# General EMI Registry - Service Endpoint Record Publisher
# configuration section

[emir-serp]
# URL of the EMIR service to connect in a
# protocol://domain:port format.
#
# Protocol is not mandatory if https (default)
# Port is not mandatory if 54321 (default)
# Domain is mandatory
#
# The following three examples mean the same
#url = emiregistry2.grid.niif.hu
#url = https://emiregistry2.grid.niif.hu
#url = https://emiregistry2.grid.niif.hu:54321
url =

# Period of registration/update messages
# Mandatory configuration parameter
# Value is given in hours
period = 10080

# Time of registration entry validity
# Mandatory configuration parameter
# Value is given in hours
validity = 10081

# User credential file locations
# Only used/necessary if 'https' protocol is used
# in the 'url' parameter.
# Not mandatory parameters
# Default values are:
#   cert = /etc/grid-security/hostcert.pem
#   key = /etc/grid-security/hostkey.pem
#   cadir = /etc/grid-security/certificates

# Logging verbosity
#
# This parameter is optional (default: error)
# Accepted values are: 'error', 'info', 'debug'
#
# If invalid value is given, the default value will be used.
# verbosity = error

# !!!IMPORTANT!!!
# Service entries can be defined in separated
# ini sections. The name of the section is
# irrelevant but must be different in every cases!
#
# Any of 'json_file_location', 'json_dir_location' or 
# 'resource_bdii_url' must be present in a section to
# enable EMIR-SERP registration otherwise section is going to
# be skipped.

# Information from single file
#
# The service entry can be defined in a single external
# json formatted file per service. Any allowed json attributes
# are allowed in this way. The location of this file must be
# defined in the 'json_file_location' ini variable.
#
# 'json_file_location' is used if no 'resource_bdii_url' or
# 'json_dir_location' is present in the same section
#
#[serviceFromFile]
#json_file_location = /var/cache/emir-serp/service.json

# Information from files in watchdir
#
# Multiple entries belonging to a service can be put into separated
# json files in a common directory. The script periodically scan
# the content of the directory setted up with this attribute and
# the content of the found json files will be propagated to the EMIR
# service.
#
# 'json_dir_location' is used if no 'resource_bdii_url' is present
#
#[serviceFromWatchDir]
#json_dir_location = /var/cache/emir-serp/services/

# Information from resource BDII 
#
# The service information to be registered can be harvested from
# directly from resource BDII LDAP servers. EMIR-SERP periodically
# queries the remote database, converts the result, and publish the
# service information to the previously configured EMIR service.
# 
# if 'resource_bdii_url' is present both 'json_dir_location' and 
# 'json_file_location' are ignored.
#
# If port is missing default 381 is used.
# If LDAP base is missing default 'o=glue' is used.
# Only 'ldap' scheme is accepted in the URL.
#
#[servicesFromResourceBDII]
#resource_bdii_url = ldap://your.resource.bdii:2135/o=glue
